from cassandra.cluster import Cluster
from cassandra.auth import PlainTextAuthProvider
import json
from dotenv import dotenv_values

config = dotenv_values('.env')

def download_scb():
  import requests

  # Replace these values with your Astra DB credentials and keys
  astra_db_api_host = config["ASTRA_DB_API_HOST"]
  astra_db_api_version = config["ASTRA_DB_API_VERSION"]
  astra_db_keyspace = config["ASTRA_DB_KEYSPACE"]
  astra_db_token = config["ASTRA_DB_TOKEN"]
  astra_db_database_id = config["ASTRA_DB_DATABASE_ID"]

  # Set the Astra DB DevOps API endpoint
  devops_api_url = f"https://{astra_db_api_host}/{astra_db_api_version}/databases/{astra_db_database_id}/secureBundleURL"

  # Set headers for authentication
  headers = {
      "Content-Type": "application/json",
      "Authorization": f"Bearer {astra_db_token}"
  }
  body = {
      "name": "<databaseName>",
      "keyspace": f"{astra_db_keyspace}",
      "cloudProvider": "aws",
      "region": "us-east-1",
      "tier": "developer",
      "capacityUnits": 1,
      "user": "<username>",
      "password": "<password>"
  }

  def download_file(url, destination):
      response = requests.get(url)
      
      if response.status_code == 200:
          with open(destination, 'wb') as file:
              file.write(response.content)
      else:
          print(f"Failed to download file. Status code: {response.status_code}")

  # Make a request to the Astra DB DevOps API to get the secure bundle URL
  response = requests.post(f"{devops_api_url}", headers=headers, data=body)

  # Check if the request was successful (HTTP status code 200)
  scb_destination = f"secure-connect-{astra_db_database_id}.zip"
  if response.status_code == 200:
      # Parse the JSON response to get the secure bundle URL
      secure_bundle_url = response.json().get("downloadURL")
      download_file(secure_bundle_url, scb_destination)
      return scb_destination
  else:
      # Print an error message if the request was not successful
      print(f"Error: {response.status_code} - {response.text}")


scb_path = download_scb()
# This secure connect bundle is autogenerated when you download your SCB, 
# if yours is different update the file name below
cloud_config= {
  'secure_connect_bundle': scb_path
}

CLIENT_ID = config["ASTRA_DB_CLIENT_ID"]
CLIENT_SECRET = config["ASTRA_DB_CLIENT_SECRET"]

auth_provider = PlainTextAuthProvider(CLIENT_ID, CLIENT_SECRET)
cluster = Cluster(cloud=cloud_config, auth_provider=auth_provider)
session = cluster.connect()

row = session.execute("select release_version from system.local").one()
if row:
  print(row[0])
else:
  print("An error occurred.")